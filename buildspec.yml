version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
    run-as: root
    commands:
      - export JAVA_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
      - export JDK_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
      - export JRE_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
      - export JAVA_HOME="$JAVA_17_HOME"
      - export JRE_HOME="$JRE_17_HOME"
      - export JDK_HOME="$JDK_17_HOME"
      - |-
        export GNUPGHOME="$(mktemp -d)" \
            &amp;&amp; curl -fL -o corretto.key https://yum.corretto.aws/corretto.key \
            &amp;&amp; gpg --batch --import corretto.key \
            &amp;&amp; gpg --batch --export --armor '6DC3636DAE534049C8B94623A122542AB04F24E3' &gt; corretto.key \
            &amp;&amp; rpm --import corretto.key \
            &amp;&amp; rm -r "$GNUPGHOME" corretto.key \
            &amp;&amp; curl -fL -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo \
            &amp;&amp; grep -q '^gpgcheck=1' /etc/yum.repos.d/corretto.repo \
            &amp;&amp; yum install -y java-17-amazon-corretto-devel \
            &amp;&amp; (find /usr/lib/jvm/java-17-amazon-corretto.x86_64 -name src.zip -delete || true) \
            &amp;&amp; yum install -y fontconfig
      - |-
        for tool_path in "$JAVA_HOME"/bin/*;
         do tool=`basename "$tool_path"`;
          if [ $tool != 'java-rmi.cgi' ];
          then
           rm -f /usr/bin/$tool /var/lib/alternatives/$tool \
            &amp;&amp; update-alternatives --install /usr/bin/$tool $tool $tool_path 20000;
          fi;
        done
  pre_build:
    commands:
      - echo Nothing to do in the pre_build phase...
  build:
    commands:
      - echo Build started on `date`
      - mvn install
  post_build:
    commands:
      - echo Build completed on `date`
artifacts:
  files:
    - target/lolmatch-1.0.jar
